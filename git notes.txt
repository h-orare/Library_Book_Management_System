Steps
1. git init 
You are initializing a local repo in your computer. And by default, its called master
2. git config --global user.name h-orare
3. git config --global user.email orareit@gmail.com
Kind of identifying yourself
4.git add -A 
staging all your files
5. git commit -m "Initial commit"
You will commit all your files to the local repo which is master by default
6. git branch new-feature
I have created another local repo called new-feature. 
7. git checkout new-feature
I have moved(from master) into the new-feature repo and I can make changes to my code here.Once done, I want to commit these changes to master. So

8. git checkout master
I have jumped back to master
9. git merge new-feature
I have merged or pulled all the code i added in new-feature INTO master
Now, i can push my code from local repo remote. basically github
10. git remote add origin https://github.com/h-orare/Dips-App-Project.git
 We have said in the remote , add this repo we created. called origin

11. git push origin master
origin is the repo we created in github. Its called origin by default. So, we are pushing from our local(in this case i was still in master) to origin and whatever repo im pushing is called master
master branch will be creeated in github
Now, i can also push new-featur branch if i wanted

12. git push origin new-feature
new-feature branch will also be added to github. This i can push even when im in master. I dint have to checkout to new-feature for me to push
Always, you stage the files before committing
when you commit, it happens in your local repo of choice
you can then push to remote, the repo of your choice. Depends on how you want to organize your code.